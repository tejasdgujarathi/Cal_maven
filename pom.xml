<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
	http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.trial</groupId>
	<artifactId>cal</artifactId>
	<packaging>jar</packaging>
	<version>1.0</version>
	<name>cal</name>
	<url>http://maven.apache.org</url>

	<properties>
		<jdk.version>1.6</jdk.version>		
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<!-- To generate the Surefire report as part of the site generation.A HTML 
		report should be generated in ${basedir}/target/site/surefire-report.html. -->
		<!-- mvn surefire-report:report -->
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.14</version>
			</plugin>
		</plugins>
	</reporting>

	<build>
		<plugins>
			<!-- The Compiler Plugin is used to compile the sources of your project. 
				The default compiler is javac and is used to compile Java sources. Also note 
				that at present the default source setting and default target setting is 
				1.5, independently of the JDK you run Maven with. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>
			<!-- This plugin provides the capability to build and sign jars. If the 
				packaging of your project is set to 'jar', this plugin is executed whenever 
				it passes the "package" phase. default: 2.3.2 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>dependency-jars/</classpathPrefix>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!-- The dependency plugin provides the capability to manipulate artifacts. 
				It can copy and/or unpack artifacts from local or remote repositories to 
				a specified location. -->

			<!-- copy-dependencies - Goal that copies the project dependencies from 
				the repository to a defined location. -->
			<!-- optional step -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.5.1</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeGroupIds>log4j</includeGroupIds>
							<outputDirectory>${project.build.directory}/dependency-jars/</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- maven-surefire-plugin: The Surefire Plugin is used during the test 
				phase of the build lifecycle. It executes the unit tests of an application. -->
			<!-- It generates reports in 2 different file formats: Plain text files 
				(*.txt) XML files (*.xml) By default, these files are generated at ${basedir}/target/surefire-reports. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.11</version>
				<configuration>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
					<jvm>${JAVA.EXE}</jvm>
					<includes>
						<include>**/*Specs.java</include>
					</includes>
				</configuration>
			</plugin>
		</plugins>
	</build>
<!-- mvn site:- generates a documentation site for your project information. -->
</project>